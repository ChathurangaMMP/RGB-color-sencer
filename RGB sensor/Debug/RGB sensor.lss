
RGB sensor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000a0  00800100  00000a18  00000aac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000a18  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000f  008001a0  008001a0  00000b4c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000b4c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000b7c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d8  00000000  00000000  00000bbc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000188b  00000000  00000000  00000c94  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008c0  00000000  00000000  0000251f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000bf3  00000000  00000000  00002ddf  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000268  00000000  00000000  000039d4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000562  00000000  00000000  00003c3c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000009e8  00000000  00000000  0000419e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c8  00000000  00000000  00004b86  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e8 e1       	ldi	r30, 0x18	; 24
  7c:	fa e0       	ldi	r31, 0x0A	; 10
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a0 3a       	cpi	r26, 0xA0	; 160
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a0 ea       	ldi	r26, 0xA0	; 160
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	af 3a       	cpi	r26, 0xAF	; 175
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 2f 03 	call	0x65e	; 0x65e <main>
  9e:	0c 94 0a 05 	jmp	0xa14	; 0xa14 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <i2c_init>:
		//int ret;
		//ret = strtol(a, &ptr, 10);
		//return ret;
		int val=100*charToInt(a[0])+10*charToInt(a[1])+charToInt(a[2]);
		return val;
	}
  a6:	82 e6       	ldi	r24, 0x62	; 98
  a8:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
  ac:	84 e0       	ldi	r24, 0x04	; 4
  ae:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  b2:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
  b6:	08 95       	ret

000000b8 <i2c_start>:
  b8:	84 ea       	ldi	r24, 0xA4	; 164
  ba:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  be:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  c2:	88 23       	and	r24, r24
  c4:	e4 f7       	brge	.-8      	; 0xbe <i2c_start+0x6>
  c6:	08 95       	ret

000000c8 <i2c_write>:
  c8:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
  cc:	84 e8       	ldi	r24, 0x84	; 132
  ce:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  d2:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  d6:	88 23       	and	r24, r24
  d8:	e4 f7       	brge	.-8      	; 0xd2 <i2c_write+0xa>
  da:	08 95       	ret

000000dc <delay>:
  dc:	40 e0       	ldi	r20, 0x00	; 0
  de:	50 e0       	ldi	r21, 0x00	; 0
  e0:	0a c0       	rjmp	.+20     	; 0xf6 <delay+0x1a>
  e2:	2f 5f       	subi	r18, 0xFF	; 255
  e4:	3f 4f       	sbci	r19, 0xFF	; 255
  e6:	02 c0       	rjmp	.+4      	; 0xec <delay+0x10>
  e8:	20 e0       	ldi	r18, 0x00	; 0
  ea:	30 e0       	ldi	r19, 0x00	; 0
  ec:	29 37       	cpi	r18, 0x79	; 121
  ee:	31 05       	cpc	r19, r1
  f0:	c4 f3       	brlt	.-16     	; 0xe2 <delay+0x6>
  f2:	4f 5f       	subi	r20, 0xFF	; 255
  f4:	5f 4f       	sbci	r21, 0xFF	; 255
  f6:	84 17       	cp	r24, r20
  f8:	95 07       	cpc	r25, r21
  fa:	b4 f7       	brge	.-20     	; 0xe8 <delay+0xc>
  fc:	08 95       	ret

000000fe <toggle>:
  fe:	eb eb       	ldi	r30, 0xBB	; 187
 100:	f0 e0       	ldi	r31, 0x00	; 0
 102:	80 81       	ld	r24, Z
 104:	82 60       	ori	r24, 0x02	; 2
 106:	80 83       	st	Z, r24
 108:	84 e8       	ldi	r24, 0x84	; 132
 10a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 10e:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 112:	88 23       	and	r24, r24
 114:	e4 f7       	brge	.-8      	; 0x10e <toggle+0x10>
 116:	81 e0       	ldi	r24, 0x01	; 1
 118:	90 e0       	ldi	r25, 0x00	; 0
 11a:	0e 94 6e 00 	call	0xdc	; 0xdc <delay>
 11e:	eb eb       	ldi	r30, 0xBB	; 187
 120:	f0 e0       	ldi	r31, 0x00	; 0
 122:	80 81       	ld	r24, Z
 124:	8d 7f       	andi	r24, 0xFD	; 253
 126:	80 83       	st	Z, r24
 128:	84 e8       	ldi	r24, 0x84	; 132
 12a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 12e:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 132:	88 23       	and	r24, r24
 134:	e4 f7       	brge	.-8      	; 0x12e <toggle+0x30>
 136:	08 95       	ret

00000138 <lcd_cmd_hf>:
 138:	eb eb       	ldi	r30, 0xBB	; 187
 13a:	f0 e0       	ldi	r31, 0x00	; 0
 13c:	90 81       	ld	r25, Z
 13e:	9e 7f       	andi	r25, 0xFE	; 254
 140:	90 83       	st	Z, r25
 142:	94 e8       	ldi	r25, 0x84	; 132
 144:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 148:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 14c:	99 23       	and	r25, r25
 14e:	e4 f7       	brge	.-8      	; 0x148 <lcd_cmd_hf+0x10>
 150:	eb eb       	ldi	r30, 0xBB	; 187
 152:	f0 e0       	ldi	r31, 0x00	; 0
 154:	90 81       	ld	r25, Z
 156:	9f 70       	andi	r25, 0x0F	; 15
 158:	90 83       	st	Z, r25
 15a:	94 e8       	ldi	r25, 0x84	; 132
 15c:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 160:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 164:	99 23       	and	r25, r25
 166:	e4 f7       	brge	.-8      	; 0x160 <lcd_cmd_hf+0x28>
 168:	eb eb       	ldi	r30, 0xBB	; 187
 16a:	f0 e0       	ldi	r31, 0x00	; 0
 16c:	90 81       	ld	r25, Z
 16e:	80 7f       	andi	r24, 0xF0	; 240
 170:	89 2b       	or	r24, r25
 172:	80 83       	st	Z, r24
 174:	84 e8       	ldi	r24, 0x84	; 132
 176:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 17a:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 17e:	88 23       	and	r24, r24
 180:	e4 f7       	brge	.-8      	; 0x17a <lcd_cmd_hf+0x42>
 182:	0e 94 7f 00 	call	0xfe	; 0xfe <toggle>
 186:	08 95       	ret

00000188 <lcd_cmd>:
 188:	cf 93       	push	r28
 18a:	c8 2f       	mov	r28, r24
 18c:	eb eb       	ldi	r30, 0xBB	; 187
 18e:	f0 e0       	ldi	r31, 0x00	; 0
 190:	80 81       	ld	r24, Z
 192:	8e 7f       	andi	r24, 0xFE	; 254
 194:	80 83       	st	Z, r24
 196:	84 e8       	ldi	r24, 0x84	; 132
 198:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 19c:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 1a0:	88 23       	and	r24, r24
 1a2:	e4 f7       	brge	.-8      	; 0x19c <lcd_cmd+0x14>
 1a4:	eb eb       	ldi	r30, 0xBB	; 187
 1a6:	f0 e0       	ldi	r31, 0x00	; 0
 1a8:	80 81       	ld	r24, Z
 1aa:	8f 70       	andi	r24, 0x0F	; 15
 1ac:	80 83       	st	Z, r24
 1ae:	84 e8       	ldi	r24, 0x84	; 132
 1b0:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 1b4:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 1b8:	88 23       	and	r24, r24
 1ba:	e4 f7       	brge	.-8      	; 0x1b4 <lcd_cmd+0x2c>
 1bc:	eb eb       	ldi	r30, 0xBB	; 187
 1be:	f0 e0       	ldi	r31, 0x00	; 0
 1c0:	80 81       	ld	r24, Z
 1c2:	9c 2f       	mov	r25, r28
 1c4:	90 7f       	andi	r25, 0xF0	; 240
 1c6:	89 2b       	or	r24, r25
 1c8:	80 83       	st	Z, r24
 1ca:	84 e8       	ldi	r24, 0x84	; 132
 1cc:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 1d0:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 1d4:	88 23       	and	r24, r24
 1d6:	e4 f7       	brge	.-8      	; 0x1d0 <lcd_cmd+0x48>
 1d8:	0e 94 7f 00 	call	0xfe	; 0xfe <toggle>
 1dc:	eb eb       	ldi	r30, 0xBB	; 187
 1de:	f0 e0       	ldi	r31, 0x00	; 0
 1e0:	80 81       	ld	r24, Z
 1e2:	8f 70       	andi	r24, 0x0F	; 15
 1e4:	80 83       	st	Z, r24
 1e6:	84 e8       	ldi	r24, 0x84	; 132
 1e8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 1ec:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 1f0:	88 23       	and	r24, r24
 1f2:	e4 f7       	brge	.-8      	; 0x1ec <lcd_cmd+0x64>
 1f4:	eb eb       	ldi	r30, 0xBB	; 187
 1f6:	f0 e0       	ldi	r31, 0x00	; 0
 1f8:	20 81       	ld	r18, Z
 1fa:	30 e1       	ldi	r19, 0x10	; 16
 1fc:	c3 9f       	mul	r28, r19
 1fe:	c0 01       	movw	r24, r0
 200:	11 24       	eor	r1, r1
 202:	82 2b       	or	r24, r18
 204:	80 83       	st	Z, r24
 206:	84 e8       	ldi	r24, 0x84	; 132
 208:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 20c:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 210:	88 23       	and	r24, r24
 212:	e4 f7       	brge	.-8      	; 0x20c <lcd_cmd+0x84>
 214:	0e 94 7f 00 	call	0xfe	; 0xfe <toggle>
 218:	cf 91       	pop	r28
 21a:	08 95       	ret

0000021c <lcd_init>:
 21c:	80 e3       	ldi	r24, 0x30	; 48
 21e:	0e 94 9c 00 	call	0x138	; 0x138 <lcd_cmd_hf>
 222:	80 e3       	ldi	r24, 0x30	; 48
 224:	0e 94 9c 00 	call	0x138	; 0x138 <lcd_cmd_hf>
 228:	80 e2       	ldi	r24, 0x20	; 32
 22a:	0e 94 9c 00 	call	0x138	; 0x138 <lcd_cmd_hf>
 22e:	88 e2       	ldi	r24, 0x28	; 40
 230:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
 234:	8c e0       	ldi	r24, 0x0C	; 12
 236:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
 23a:	81 e0       	ldi	r24, 0x01	; 1
 23c:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
 240:	86 e0       	ldi	r24, 0x06	; 6
 242:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
 246:	80 e8       	ldi	r24, 0x80	; 128
 248:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
 24c:	08 95       	ret

0000024e <lcd_dwr>:
 24e:	cf 93       	push	r28
 250:	c8 2f       	mov	r28, r24
 252:	eb eb       	ldi	r30, 0xBB	; 187
 254:	f0 e0       	ldi	r31, 0x00	; 0
 256:	80 81       	ld	r24, Z
 258:	81 60       	ori	r24, 0x01	; 1
 25a:	80 83       	st	Z, r24
 25c:	84 e8       	ldi	r24, 0x84	; 132
 25e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 262:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 266:	88 23       	and	r24, r24
 268:	e4 f7       	brge	.-8      	; 0x262 <lcd_dwr+0x14>
 26a:	eb eb       	ldi	r30, 0xBB	; 187
 26c:	f0 e0       	ldi	r31, 0x00	; 0
 26e:	80 81       	ld	r24, Z
 270:	8f 70       	andi	r24, 0x0F	; 15
 272:	80 83       	st	Z, r24
 274:	84 e8       	ldi	r24, 0x84	; 132
 276:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 27a:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 27e:	88 23       	and	r24, r24
 280:	e4 f7       	brge	.-8      	; 0x27a <lcd_dwr+0x2c>
 282:	eb eb       	ldi	r30, 0xBB	; 187
 284:	f0 e0       	ldi	r31, 0x00	; 0
 286:	80 81       	ld	r24, Z
 288:	9c 2f       	mov	r25, r28
 28a:	90 7f       	andi	r25, 0xF0	; 240
 28c:	89 2b       	or	r24, r25
 28e:	80 83       	st	Z, r24
 290:	84 e8       	ldi	r24, 0x84	; 132
 292:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 296:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 29a:	88 23       	and	r24, r24
 29c:	e4 f7       	brge	.-8      	; 0x296 <lcd_dwr+0x48>
 29e:	0e 94 7f 00 	call	0xfe	; 0xfe <toggle>
 2a2:	eb eb       	ldi	r30, 0xBB	; 187
 2a4:	f0 e0       	ldi	r31, 0x00	; 0
 2a6:	80 81       	ld	r24, Z
 2a8:	8f 70       	andi	r24, 0x0F	; 15
 2aa:	80 83       	st	Z, r24
 2ac:	84 e8       	ldi	r24, 0x84	; 132
 2ae:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 2b2:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 2b6:	88 23       	and	r24, r24
 2b8:	e4 f7       	brge	.-8      	; 0x2b2 <lcd_dwr+0x64>
 2ba:	eb eb       	ldi	r30, 0xBB	; 187
 2bc:	f0 e0       	ldi	r31, 0x00	; 0
 2be:	20 81       	ld	r18, Z
 2c0:	30 e1       	ldi	r19, 0x10	; 16
 2c2:	c3 9f       	mul	r28, r19
 2c4:	c0 01       	movw	r24, r0
 2c6:	11 24       	eor	r1, r1
 2c8:	82 2b       	or	r24, r18
 2ca:	80 83       	st	Z, r24
 2cc:	84 e8       	ldi	r24, 0x84	; 132
 2ce:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 2d2:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 2d6:	88 23       	and	r24, r24
 2d8:	e4 f7       	brge	.-8      	; 0x2d2 <lcd_dwr+0x84>
 2da:	0e 94 7f 00 	call	0xfe	; 0xfe <toggle>
 2de:	cf 91       	pop	r28
 2e0:	08 95       	ret

000002e2 <lcd_msg>:
 2e2:	cf 93       	push	r28
 2e4:	df 93       	push	r29
 2e6:	ec 01       	movw	r28, r24
 2e8:	03 c0       	rjmp	.+6      	; 0x2f0 <lcd_msg+0xe>
 2ea:	21 96       	adiw	r28, 0x01	; 1
 2ec:	0e 94 27 01 	call	0x24e	; 0x24e <lcd_dwr>
 2f0:	88 81       	ld	r24, Y
 2f2:	81 11       	cpse	r24, r1
 2f4:	fa cf       	rjmp	.-12     	; 0x2ea <lcd_msg+0x8>
 2f6:	df 91       	pop	r29
 2f8:	cf 91       	pop	r28
 2fa:	08 95       	ret

000002fc <keyfind>:
 2fc:	80 ef       	ldi	r24, 0xF0	; 240
 2fe:	84 b9       	out	0x04, r24	; 4
 300:	8f ef       	ldi	r24, 0xFF	; 255
 302:	85 b9       	out	0x05, r24	; 5
 304:	85 b1       	in	r24, 0x05	; 5
 306:	8f 70       	andi	r24, 0x0F	; 15
 308:	85 b9       	out	0x05, r24	; 5
 30a:	00 00       	nop
 30c:	83 b1       	in	r24, 0x03	; 3
 30e:	8f 70       	andi	r24, 0x0F	; 15
 310:	80 93 a5 01 	sts	0x01A5, r24	; 0x8001a5 <colloc>
 314:	8f 30       	cpi	r24, 0x0F	; 15
 316:	b1 f7       	brne	.-20     	; 0x304 <keyfind+0x8>
 318:	2f ef       	ldi	r18, 0xFF	; 255
 31a:	89 ef       	ldi	r24, 0xF9	; 249
 31c:	90 e0       	ldi	r25, 0x00	; 0
 31e:	21 50       	subi	r18, 0x01	; 1
 320:	80 40       	sbci	r24, 0x00	; 0
 322:	90 40       	sbci	r25, 0x00	; 0
 324:	e1 f7       	brne	.-8      	; 0x31e <keyfind+0x22>
 326:	00 c0       	rjmp	.+0      	; 0x328 <keyfind+0x2c>
 328:	00 00       	nop
 32a:	83 b1       	in	r24, 0x03	; 3
 32c:	8f 70       	andi	r24, 0x0F	; 15
 32e:	80 93 a5 01 	sts	0x01A5, r24	; 0x8001a5 <colloc>
 332:	8f 30       	cpi	r24, 0x0F	; 15
 334:	89 f3       	breq	.-30     	; 0x318 <keyfind+0x1c>
 336:	2f ef       	ldi	r18, 0xFF	; 255
 338:	83 ef       	ldi	r24, 0xF3	; 243
 33a:	91 e0       	ldi	r25, 0x01	; 1
 33c:	21 50       	subi	r18, 0x01	; 1
 33e:	80 40       	sbci	r24, 0x00	; 0
 340:	90 40       	sbci	r25, 0x00	; 0
 342:	e1 f7       	brne	.-8      	; 0x33c <keyfind+0x40>
 344:	00 c0       	rjmp	.+0      	; 0x346 <keyfind+0x4a>
 346:	00 00       	nop
 348:	83 b1       	in	r24, 0x03	; 3
 34a:	8f 70       	andi	r24, 0x0F	; 15
 34c:	80 93 a5 01 	sts	0x01A5, r24	; 0x8001a5 <colloc>
 350:	8f 30       	cpi	r24, 0x0F	; 15
 352:	11 f3       	breq	.-60     	; 0x318 <keyfind+0x1c>
 354:	8f ee       	ldi	r24, 0xEF	; 239
 356:	85 b9       	out	0x05, r24	; 5
 358:	00 00       	nop
 35a:	83 b1       	in	r24, 0x03	; 3
 35c:	8f 70       	andi	r24, 0x0F	; 15
 35e:	80 93 a5 01 	sts	0x01A5, r24	; 0x8001a5 <colloc>
 362:	8f 30       	cpi	r24, 0x0F	; 15
 364:	19 f0       	breq	.+6      	; 0x36c <keyfind+0x70>
 366:	10 92 a8 01 	sts	0x01A8, r1	; 0x8001a8 <rowloc>
 36a:	27 c0       	rjmp	.+78     	; 0x3ba <keyfind+0xbe>
 36c:	8f ed       	ldi	r24, 0xDF	; 223
 36e:	85 b9       	out	0x05, r24	; 5
 370:	00 00       	nop
 372:	83 b1       	in	r24, 0x03	; 3
 374:	8f 70       	andi	r24, 0x0F	; 15
 376:	80 93 a5 01 	sts	0x01A5, r24	; 0x8001a5 <colloc>
 37a:	8f 30       	cpi	r24, 0x0F	; 15
 37c:	21 f0       	breq	.+8      	; 0x386 <keyfind+0x8a>
 37e:	81 e0       	ldi	r24, 0x01	; 1
 380:	80 93 a8 01 	sts	0x01A8, r24	; 0x8001a8 <rowloc>
 384:	1a c0       	rjmp	.+52     	; 0x3ba <keyfind+0xbe>
 386:	8f eb       	ldi	r24, 0xBF	; 191
 388:	85 b9       	out	0x05, r24	; 5
 38a:	00 00       	nop
 38c:	83 b1       	in	r24, 0x03	; 3
 38e:	8f 70       	andi	r24, 0x0F	; 15
 390:	80 93 a5 01 	sts	0x01A5, r24	; 0x8001a5 <colloc>
 394:	8f 30       	cpi	r24, 0x0F	; 15
 396:	21 f0       	breq	.+8      	; 0x3a0 <keyfind+0xa4>
 398:	82 e0       	ldi	r24, 0x02	; 2
 39a:	80 93 a8 01 	sts	0x01A8, r24	; 0x8001a8 <rowloc>
 39e:	0d c0       	rjmp	.+26     	; 0x3ba <keyfind+0xbe>
 3a0:	8f e7       	ldi	r24, 0x7F	; 127
 3a2:	85 b9       	out	0x05, r24	; 5
 3a4:	00 00       	nop
 3a6:	83 b1       	in	r24, 0x03	; 3
 3a8:	8f 70       	andi	r24, 0x0F	; 15
 3aa:	80 93 a5 01 	sts	0x01A5, r24	; 0x8001a5 <colloc>
 3ae:	8f 30       	cpi	r24, 0x0F	; 15
 3b0:	09 f4       	brne	.+2      	; 0x3b4 <keyfind+0xb8>
 3b2:	a4 cf       	rjmp	.-184    	; 0x2fc <keyfind>
 3b4:	83 e0       	ldi	r24, 0x03	; 3
 3b6:	80 93 a8 01 	sts	0x01A8, r24	; 0x8001a8 <rowloc>
 3ba:	80 91 a5 01 	lds	r24, 0x01A5	; 0x8001a5 <colloc>
 3be:	8e 30       	cpi	r24, 0x0E	; 14
 3c0:	59 f4       	brne	.+22     	; 0x3d8 <keyfind+0xdc>
 3c2:	e0 91 a8 01 	lds	r30, 0x01A8	; 0x8001a8 <rowloc>
 3c6:	f0 e0       	ldi	r31, 0x00	; 0
 3c8:	ee 0f       	add	r30, r30
 3ca:	ff 1f       	adc	r31, r31
 3cc:	ee 0f       	add	r30, r30
 3ce:	ff 1f       	adc	r31, r31
 3d0:	ef 5f       	subi	r30, 0xFF	; 255
 3d2:	fe 4f       	sbci	r31, 0xFE	; 254
 3d4:	80 81       	ld	r24, Z
 3d6:	08 95       	ret
 3d8:	8d 30       	cpi	r24, 0x0D	; 13
 3da:	59 f4       	brne	.+22     	; 0x3f2 <keyfind+0xf6>
 3dc:	e0 91 a8 01 	lds	r30, 0x01A8	; 0x8001a8 <rowloc>
 3e0:	f0 e0       	ldi	r31, 0x00	; 0
 3e2:	ee 0f       	add	r30, r30
 3e4:	ff 1f       	adc	r31, r31
 3e6:	ee 0f       	add	r30, r30
 3e8:	ff 1f       	adc	r31, r31
 3ea:	ef 5f       	subi	r30, 0xFF	; 255
 3ec:	fe 4f       	sbci	r31, 0xFE	; 254
 3ee:	81 81       	ldd	r24, Z+1	; 0x01
 3f0:	08 95       	ret
 3f2:	8b 30       	cpi	r24, 0x0B	; 11
 3f4:	59 f4       	brne	.+22     	; 0x40c <__EEPROM_REGION_LENGTH__+0xc>
 3f6:	e0 91 a8 01 	lds	r30, 0x01A8	; 0x8001a8 <rowloc>
 3fa:	f0 e0       	ldi	r31, 0x00	; 0
 3fc:	ee 0f       	add	r30, r30
 3fe:	ff 1f       	adc	r31, r31
 400:	ee 0f       	add	r30, r30
 402:	ff 1f       	adc	r31, r31
 404:	ef 5f       	subi	r30, 0xFF	; 255
 406:	fe 4f       	sbci	r31, 0xFE	; 254
 408:	82 81       	ldd	r24, Z+2	; 0x02
 40a:	08 95       	ret
 40c:	e0 91 a8 01 	lds	r30, 0x01A8	; 0x8001a8 <rowloc>
 410:	f0 e0       	ldi	r31, 0x00	; 0
 412:	ee 0f       	add	r30, r30
 414:	ff 1f       	adc	r31, r31
 416:	ee 0f       	add	r30, r30
 418:	ff 1f       	adc	r31, r31
 41a:	ef 5f       	subi	r30, 0xFF	; 255
 41c:	fe 4f       	sbci	r31, 0xFE	; 254
 41e:	83 81       	ldd	r24, Z+3	; 0x03
 420:	08 95       	ret

00000422 <adc_init>:
 422:	83 e4       	ldi	r24, 0x43	; 67
 424:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
 428:	86 e8       	ldi	r24, 0x86	; 134
 42a:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
 42e:	08 95       	ret

00000430 <adc_read>:
 430:	87 70       	andi	r24, 0x07	; 7
 432:	ec e7       	ldi	r30, 0x7C	; 124
 434:	f0 e0       	ldi	r31, 0x00	; 0
 436:	90 81       	ld	r25, Z
 438:	98 7f       	andi	r25, 0xF8	; 248
 43a:	89 2b       	or	r24, r25
 43c:	80 83       	st	Z, r24
 43e:	ea e7       	ldi	r30, 0x7A	; 122
 440:	f0 e0       	ldi	r31, 0x00	; 0
 442:	80 81       	ld	r24, Z
 444:	80 64       	ori	r24, 0x40	; 64
 446:	80 83       	st	Z, r24
 448:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
 44c:	86 fd       	sbrc	r24, 6
 44e:	fc cf       	rjmp	.-8      	; 0x448 <adc_read+0x18>
 450:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
 454:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
 458:	08 95       	ret

0000045a <power>:
 45a:	9c 01       	movw	r18, r24
 45c:	81 e0       	ldi	r24, 0x01	; 1
 45e:	90 e0       	ldi	r25, 0x00	; 0
 460:	0a c0       	rjmp	.+20     	; 0x476 <power+0x1c>
 462:	ac 01       	movw	r20, r24
 464:	42 9f       	mul	r20, r18
 466:	c0 01       	movw	r24, r0
 468:	43 9f       	mul	r20, r19
 46a:	90 0d       	add	r25, r0
 46c:	52 9f       	mul	r21, r18
 46e:	90 0d       	add	r25, r0
 470:	11 24       	eor	r1, r1
 472:	61 50       	subi	r22, 0x01	; 1
 474:	71 09       	sbc	r23, r1
 476:	16 16       	cp	r1, r22
 478:	17 06       	cpc	r1, r23
 47a:	9c f3       	brlt	.-26     	; 0x462 <power+0x8>
 47c:	08 95       	ret

0000047e <get_3_digit>:
 47e:	cf 92       	push	r12
 480:	df 92       	push	r13
 482:	ef 92       	push	r14
 484:	ff 92       	push	r15
 486:	0f 93       	push	r16
 488:	1f 93       	push	r17
 48a:	cf 93       	push	r28
 48c:	df 93       	push	r29
 48e:	00 d0       	rcall	.+0      	; 0x490 <get_3_digit+0x12>
 490:	00 d0       	rcall	.+0      	; 0x492 <get_3_digit+0x14>
 492:	cd b7       	in	r28, 0x3d	; 61
 494:	de b7       	in	r29, 0x3e	; 62
 496:	e1 2c       	mov	r14, r1
 498:	f1 2c       	mov	r15, r1
 49a:	17 c0       	rjmp	.+46     	; 0x4ca <get_3_digit+0x4c>
 49c:	0e 94 7e 01 	call	0x2fc	; 0x2fc <keyfind>
 4a0:	08 2f       	mov	r16, r24
 4a2:	88 23       	and	r24, r24
 4a4:	91 f0       	breq	.+36     	; 0x4ca <get_3_digit+0x4c>
 4a6:	89 ec       	ldi	r24, 0xC9	; 201
 4a8:	8e 0d       	add	r24, r14
 4aa:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
 4ae:	10 e0       	ldi	r17, 0x00	; 0
 4b0:	1a 83       	std	Y+2, r17	; 0x02
 4b2:	09 83       	std	Y+1, r16	; 0x01
 4b4:	1c 82       	std	Y+4, r1	; 0x04
 4b6:	1b 82       	std	Y+3, r1	; 0x03
 4b8:	ce 01       	movw	r24, r28
 4ba:	01 96       	adiw	r24, 0x01	; 1
 4bc:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
 4c0:	c0 0e       	add	r12, r16
 4c2:	d1 1e       	adc	r13, r17
 4c4:	8f ef       	ldi	r24, 0xFF	; 255
 4c6:	e8 1a       	sub	r14, r24
 4c8:	f8 0a       	sbc	r15, r24
 4ca:	83 e0       	ldi	r24, 0x03	; 3
 4cc:	e8 16       	cp	r14, r24
 4ce:	f1 04       	cpc	r15, r1
 4d0:	2c f3       	brlt	.-54     	; 0x49c <get_3_digit+0x1e>
 4d2:	c6 01       	movw	r24, r12
 4d4:	0f 90       	pop	r0
 4d6:	0f 90       	pop	r0
 4d8:	0f 90       	pop	r0
 4da:	0f 90       	pop	r0
 4dc:	df 91       	pop	r29
 4de:	cf 91       	pop	r28
 4e0:	1f 91       	pop	r17
 4e2:	0f 91       	pop	r16
 4e4:	ff 90       	pop	r15
 4e6:	ef 90       	pop	r14
 4e8:	df 90       	pop	r13
 4ea:	cf 90       	pop	r12
 4ec:	08 95       	ret

000004ee <get_3_digit_2>:
 4ee:	af 92       	push	r10
 4f0:	bf 92       	push	r11
 4f2:	cf 92       	push	r12
 4f4:	df 92       	push	r13
 4f6:	ef 92       	push	r14
 4f8:	ff 92       	push	r15
 4fa:	0f 93       	push	r16
 4fc:	1f 93       	push	r17
 4fe:	cf 93       	push	r28
 500:	df 93       	push	r29
 502:	00 d0       	rcall	.+0      	; 0x504 <get_3_digit_2+0x16>
 504:	cd b7       	in	r28, 0x3d	; 61
 506:	de b7       	in	r29, 0x3e	; 62
 508:	c1 2c       	mov	r12, r1
 50a:	d1 2c       	mov	r13, r1
 50c:	00 e0       	ldi	r16, 0x00	; 0
 50e:	10 e0       	ldi	r17, 0x00	; 0
 510:	26 c0       	rjmp	.+76     	; 0x55e <get_3_digit_2+0x70>
 512:	0e 94 7e 01 	call	0x2fc	; 0x2fc <keyfind>
 516:	e8 2e       	mov	r14, r24
 518:	f1 2c       	mov	r15, r1
 51a:	57 01       	movw	r10, r14
 51c:	20 e3       	ldi	r18, 0x30	; 48
 51e:	a2 1a       	sub	r10, r18
 520:	b1 08       	sbc	r11, r1
 522:	89 ec       	ldi	r24, 0xC9	; 201
 524:	80 0f       	add	r24, r16
 526:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
 52a:	fa 82       	std	Y+2, r15	; 0x02
 52c:	e9 82       	std	Y+1, r14	; 0x01
 52e:	ce 01       	movw	r24, r28
 530:	01 96       	adiw	r24, 0x01	; 1
 532:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
 536:	62 e0       	ldi	r22, 0x02	; 2
 538:	70 e0       	ldi	r23, 0x00	; 0
 53a:	60 1b       	sub	r22, r16
 53c:	71 0b       	sbc	r23, r17
 53e:	8a e0       	ldi	r24, 0x0A	; 10
 540:	90 e0       	ldi	r25, 0x00	; 0
 542:	0e 94 2d 02 	call	0x45a	; 0x45a <power>
 546:	9c 01       	movw	r18, r24
 548:	a2 9e       	mul	r10, r18
 54a:	c0 01       	movw	r24, r0
 54c:	a3 9e       	mul	r10, r19
 54e:	90 0d       	add	r25, r0
 550:	b2 9e       	mul	r11, r18
 552:	90 0d       	add	r25, r0
 554:	11 24       	eor	r1, r1
 556:	c8 0e       	add	r12, r24
 558:	d9 1e       	adc	r13, r25
 55a:	0f 5f       	subi	r16, 0xFF	; 255
 55c:	1f 4f       	sbci	r17, 0xFF	; 255
 55e:	03 30       	cpi	r16, 0x03	; 3
 560:	11 05       	cpc	r17, r1
 562:	bc f2       	brlt	.-82     	; 0x512 <get_3_digit_2+0x24>
 564:	c6 01       	movw	r24, r12
 566:	0f 90       	pop	r0
 568:	0f 90       	pop	r0
 56a:	df 91       	pop	r29
 56c:	cf 91       	pop	r28
 56e:	1f 91       	pop	r17
 570:	0f 91       	pop	r16
 572:	ff 90       	pop	r15
 574:	ef 90       	pop	r14
 576:	df 90       	pop	r13
 578:	cf 90       	pop	r12
 57a:	bf 90       	pop	r11
 57c:	af 90       	pop	r10
 57e:	08 95       	ret

00000580 <displayWrite>:
 580:	ef 92       	push	r14
 582:	ff 92       	push	r15
 584:	0f 93       	push	r16
 586:	1f 93       	push	r17
 588:	cf 93       	push	r28
 58a:	df 93       	push	r29
 58c:	7c 01       	movw	r14, r24
 58e:	8b 01       	movw	r16, r22
 590:	0e 94 0e 01 	call	0x21c	; 0x21c <lcd_init>
 594:	80 ec       	ldi	r24, 0xC0	; 192
 596:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
 59a:	c7 01       	movw	r24, r14
 59c:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
 5a0:	87 ec       	ldi	r24, 0xC7	; 199
 5a2:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
 5a6:	c8 01       	movw	r24, r16
 5a8:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
 5ac:	80 e8       	ldi	r24, 0x80	; 128
 5ae:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
 5b2:	81 e1       	ldi	r24, 0x11	; 17
 5b4:	91 e0       	ldi	r25, 0x01	; 1
 5b6:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
 5ba:	89 e8       	ldi	r24, 0x89	; 137
 5bc:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
 5c0:	89 e1       	ldi	r24, 0x19	; 25
 5c2:	91 e0       	ldi	r25, 0x01	; 1
 5c4:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
 5c8:	0e 94 3f 02 	call	0x47e	; 0x47e <get_3_digit>
 5cc:	ec 01       	movw	r28, r24
 5ce:	89 2b       	or	r24, r25
 5d0:	51 f4       	brne	.+20     	; 0x5e6 <displayWrite+0x66>
 5d2:	0e c0       	rjmp	.+28     	; 0x5f0 <displayWrite+0x70>
 5d4:	8c 2f       	mov	r24, r28
 5d6:	9d 2f       	mov	r25, r29
 5d8:	0b c0       	rjmp	.+22     	; 0x5f0 <displayWrite+0x70>
 5da:	8d 32       	cpi	r24, 0x2D	; 45
 5dc:	21 f4       	brne	.+8      	; 0x5e6 <displayWrite+0x66>
 5de:	b8 01       	movw	r22, r16
 5e0:	c7 01       	movw	r24, r14
 5e2:	0e 94 c0 02 	call	0x580	; 0x580 <displayWrite>
 5e6:	0e 94 7e 01 	call	0x2fc	; 0x2fc <keyfind>
 5ea:	8b 32       	cpi	r24, 0x2B	; 43
 5ec:	b1 f7       	brne	.-20     	; 0x5da <displayWrite+0x5a>
 5ee:	f2 cf       	rjmp	.-28     	; 0x5d4 <displayWrite+0x54>
 5f0:	df 91       	pop	r29
 5f2:	cf 91       	pop	r28
 5f4:	1f 91       	pop	r17
 5f6:	0f 91       	pop	r16
 5f8:	ff 90       	pop	r15
 5fa:	ef 90       	pop	r14
 5fc:	08 95       	ret

000005fe <RGB_off>:
 5fe:	87 b1       	in	r24, 0x07	; 7
 600:	88 7f       	andi	r24, 0xF8	; 248
 602:	87 b9       	out	0x07, r24	; 7
 604:	08 95       	ret

00000606 <pwm>:
 606:	9c 01       	movw	r18, r24
 608:	95 b5       	in	r25, 0x25	; 37
 60a:	93 60       	ori	r25, 0x03	; 3
 60c:	95 bd       	out	0x25, r25	; 37
 60e:	e1 eb       	ldi	r30, 0xB1	; 177
 610:	f0 e0       	ldi	r31, 0x00	; 0
 612:	90 81       	ld	r25, Z
 614:	93 60       	ori	r25, 0x03	; 3
 616:	90 83       	st	Z, r25
 618:	21 30       	cpi	r18, 0x01	; 1
 61a:	31 05       	cpc	r19, r1
 61c:	69 f0       	breq	.+26     	; 0x638 <pwm+0x32>
 61e:	22 30       	cpi	r18, 0x02	; 2
 620:	31 05       	cpc	r19, r1
 622:	91 f0       	breq	.+36     	; 0x648 <pwm+0x42>
 624:	23 2b       	or	r18, r19
 626:	d1 f4       	brne	.+52     	; 0x65c <pwm+0x56>
 628:	84 b5       	in	r24, 0x24	; 36
 62a:	83 68       	ori	r24, 0x83	; 131
 62c:	84 bd       	out	0x24, r24	; 36
 62e:	8a b1       	in	r24, 0x0a	; 10
 630:	80 64       	ori	r24, 0x40	; 64
 632:	8a b9       	out	0x0a, r24	; 10
 634:	67 bd       	out	0x27, r22	; 39
 636:	08 95       	ret
 638:	84 b5       	in	r24, 0x24	; 36
 63a:	83 62       	ori	r24, 0x23	; 35
 63c:	84 bd       	out	0x24, r24	; 36
 63e:	8a b1       	in	r24, 0x0a	; 10
 640:	80 62       	ori	r24, 0x20	; 32
 642:	8a b9       	out	0x0a, r24	; 10
 644:	68 bd       	out	0x28, r22	; 40
 646:	08 95       	ret
 648:	e0 eb       	ldi	r30, 0xB0	; 176
 64a:	f0 e0       	ldi	r31, 0x00	; 0
 64c:	80 81       	ld	r24, Z
 64e:	83 62       	ori	r24, 0x23	; 35
 650:	80 83       	st	Z, r24
 652:	8a b1       	in	r24, 0x0a	; 10
 654:	88 60       	ori	r24, 0x08	; 8
 656:	8a b9       	out	0x0a, r24	; 10
 658:	60 93 b4 00 	sts	0x00B4, r22	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
 65c:	08 95       	ret

0000065e <main>:


	int main(void){
 65e:	cf 93       	push	r28
 660:	df 93       	push	r29
 662:	cd b7       	in	r28, 0x3d	; 61
 664:	de b7       	in	r29, 0x3e	; 62
 666:	e3 97       	sbiw	r28, 0x33	; 51
 668:	0f b6       	in	r0, 0x3f	; 63
 66a:	f8 94       	cli
 66c:	de bf       	out	0x3e, r29	; 62
 66e:	0f be       	out	0x3f, r0	; 63
 670:	cd bf       	out	0x3d, r28	; 61
		i2c_init();
 672:	0e 94 53 00 	call	0xa6	; 0xa6 <i2c_init>
		i2c_start();
 676:	0e 94 5c 00 	call	0xb8	; 0xb8 <i2c_start>
		i2c_write(0x70);
 67a:	80 e7       	ldi	r24, 0x70	; 112
 67c:	0e 94 64 00 	call	0xc8	; 0xc8 <i2c_write>
		lcd_init();
 680:	0e 94 0e 01 	call	0x21c	; 0x21c <lcd_init>
		lcd_cmd(0x80); lcd_msg("mode 1");
 684:	80 e8       	ldi	r24, 0x80	; 128
 686:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
 68a:	81 e2       	ldi	r24, 0x21	; 33
 68c:	91 e0       	ldi	r25, 0x01	; 1
 68e:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
		lcd_cmd(0x88); lcd_msg("mode 2");
 692:	88 e8       	ldi	r24, 0x88	; 136
 694:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
 698:	88 e2       	ldi	r24, 0x28	; 40
 69a:	91 e0       	ldi	r25, 0x01	; 1
 69c:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
		lcd_cmd(0xc5); lcd_msg("mode 3");
 6a0:	85 ec       	ldi	r24, 0xC5	; 197
 6a2:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
 6a6:	8f e2       	ldi	r24, 0x2F	; 47
 6a8:	91 e0       	ldi	r25, 0x01	; 1
 6aa:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>

		DDRC = 0b00000111;
 6ae:	87 e0       	ldi	r24, 0x07	; 7
 6b0:	87 b9       	out	0x07, r24	; 7

		adc_init();
 6b2:	0e 94 11 02 	call	0x422	; 0x422 <adc_init>

		while (1)

		{
			//mode selection
			char mode = keyfind();
 6b6:	0e 94 7e 01 	call	0x2fc	; 0x2fc <keyfind>
 6ba:	18 2f       	mov	r17, r24
			if (mode == '1') { //mode 1 - calibration mode
 6bc:	81 33       	cpi	r24, 0x31	; 49
 6be:	09 f0       	breq	.+2      	; 0x6c2 <main+0x64>
 6c0:	5d c0       	rjmp	.+186    	; 0x77c <main+0x11e>
				RGB_off();
 6c2:	0e 94 ff 02 	call	0x5fe	; 0x5fe <RGB_off>
				Red_b = displayWrite("Min", "R-");
 6c6:	66 e3       	ldi	r22, 0x36	; 54
 6c8:	71 e0       	ldi	r23, 0x01	; 1
 6ca:	89 e3       	ldi	r24, 0x39	; 57
 6cc:	91 e0       	ldi	r25, 0x01	; 1
 6ce:	0e 94 c0 02 	call	0x580	; 0x580 <displayWrite>
 6d2:	90 93 aa 01 	sts	0x01AA, r25	; 0x8001aa <Red_b+0x1>
 6d6:	80 93 a9 01 	sts	0x01A9, r24	; 0x8001a9 <Red_b>
				if (Red_b) {
 6da:	89 2b       	or	r24, r25
 6dc:	09 f4       	brne	.+2      	; 0x6e0 <main+0x82>
 6de:	4e c0       	rjmp	.+156    	; 0x77c <main+0x11e>
					Green_b = displayWrite("Min", "G-");
 6e0:	6d e3       	ldi	r22, 0x3D	; 61
 6e2:	71 e0       	ldi	r23, 0x01	; 1
 6e4:	89 e3       	ldi	r24, 0x39	; 57
 6e6:	91 e0       	ldi	r25, 0x01	; 1
 6e8:	0e 94 c0 02 	call	0x580	; 0x580 <displayWrite>
 6ec:	80 93 ab 01 	sts	0x01AB, r24	; 0x8001ab <Green_b>
					if (Green_b) {
 6f0:	88 23       	and	r24, r24
 6f2:	09 f4       	brne	.+2      	; 0x6f6 <main+0x98>
 6f4:	43 c0       	rjmp	.+134    	; 0x77c <main+0x11e>
						Blue_b = displayWrite("Min", "B-");
 6f6:	60 e4       	ldi	r22, 0x40	; 64
 6f8:	71 e0       	ldi	r23, 0x01	; 1
 6fa:	89 e3       	ldi	r24, 0x39	; 57
 6fc:	91 e0       	ldi	r25, 0x01	; 1
 6fe:	0e 94 c0 02 	call	0x580	; 0x580 <displayWrite>
 702:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <__data_end>
						if (Blue_b) {
 706:	88 23       	and	r24, r24
 708:	c9 f1       	breq	.+114    	; 0x77c <main+0x11e>
							Red_w = displayWrite("Max", "R-");
 70a:	66 e3       	ldi	r22, 0x36	; 54
 70c:	71 e0       	ldi	r23, 0x01	; 1
 70e:	83 e4       	ldi	r24, 0x43	; 67
 710:	91 e0       	ldi	r25, 0x01	; 1
 712:	0e 94 c0 02 	call	0x580	; 0x580 <displayWrite>
 716:	80 93 ac 01 	sts	0x01AC, r24	; 0x8001ac <Red_w>
							if (Red_w) {
 71a:	88 23       	and	r24, r24
 71c:	79 f1       	breq	.+94     	; 0x77c <main+0x11e>
								Green_w = displayWrite("Max", "G-");
 71e:	6d e3       	ldi	r22, 0x3D	; 61
 720:	71 e0       	ldi	r23, 0x01	; 1
 722:	83 e4       	ldi	r24, 0x43	; 67
 724:	91 e0       	ldi	r25, 0x01	; 1
 726:	0e 94 c0 02 	call	0x580	; 0x580 <displayWrite>
 72a:	80 93 ad 01 	sts	0x01AD, r24	; 0x8001ad <Green_w>
								if (Green_w) {
 72e:	88 23       	and	r24, r24
 730:	29 f1       	breq	.+74     	; 0x77c <main+0x11e>
									Blue_w = displayWrite("Max", "B-");
 732:	60 e4       	ldi	r22, 0x40	; 64
 734:	71 e0       	ldi	r23, 0x01	; 1
 736:	83 e4       	ldi	r24, 0x43	; 67
 738:	91 e0       	ldi	r25, 0x01	; 1
 73a:	0e 94 c0 02 	call	0x580	; 0x580 <displayWrite>
 73e:	80 93 ae 01 	sts	0x01AE, r24	; 0x8001ae <Blue_w>
									if (Blue_w) {
 742:	88 23       	and	r24, r24
 744:	d9 f0       	breq	.+54     	; 0x77c <main+0x11e>
										_Bool flag = false;
										_Bool calibrated = true;
										lcd_init();
 746:	0e 94 0e 01 	call	0x21c	; 0x21c <lcd_init>
										lcd_cmd(0x82);
 74a:	82 e8       	ldi	r24, 0x82	; 130
 74c:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
										lcd_msg("Calibration");
 750:	87 e4       	ldi	r24, 0x47	; 71
 752:	91 e0       	ldi	r25, 0x01	; 1
 754:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
										lcd_cmd(0xC6);
 758:	86 ec       	ldi	r24, 0xC6	; 198
 75a:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
										lcd_msg("Done!");
 75e:	83 e5       	ldi	r24, 0x53	; 83
 760:	91 e0       	ldi	r25, 0x01	; 1
 762:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 766:	2f ef       	ldi	r18, 0xFF	; 255
 768:	83 ed       	ldi	r24, 0xD3	; 211
 76a:	90 e3       	ldi	r25, 0x30	; 48
 76c:	21 50       	subi	r18, 0x01	; 1
 76e:	80 40       	sbci	r24, 0x00	; 0
 770:	90 40       	sbci	r25, 0x00	; 0
 772:	e1 f7       	brne	.-8      	; 0x76c <main+0x10e>
 774:	00 c0       	rjmp	.+0      	; 0x776 <main+0x118>
 776:	00 00       	nop
										_delay_ms(1000);
										main();
 778:	0e 94 2f 03 	call	0x65e	; 0x65e <main>
						}

					}
				}
			}
			if (mode == '2') { //mode 2 - sensoring mode
 77c:	12 33       	cpi	r17, 0x32	; 50
 77e:	09 f0       	breq	.+2      	; 0x782 <main+0x124>
 780:	96 c0       	rjmp	.+300    	; 0x8ae <__DATA_REGION_LENGTH__+0xae>
				lcd_init();
 782:	0e 94 0e 01 	call	0x21c	; 0x21c <lcd_init>
				while (1) {
					
					PORTC ^= (1 << Red); _delay_ms(500); Red_val = adc_read(pin); PORTC ^= (1 << Red); //light up red bulb
 786:	88 b1       	in	r24, 0x08	; 8
 788:	11 e0       	ldi	r17, 0x01	; 1
 78a:	81 27       	eor	r24, r17
 78c:	88 b9       	out	0x08, r24	; 8
 78e:	2f ef       	ldi	r18, 0xFF	; 255
 790:	89 e6       	ldi	r24, 0x69	; 105
 792:	98 e1       	ldi	r25, 0x18	; 24
 794:	21 50       	subi	r18, 0x01	; 1
 796:	80 40       	sbci	r24, 0x00	; 0
 798:	90 40       	sbci	r25, 0x00	; 0
 79a:	e1 f7       	brne	.-8      	; 0x794 <main+0x136>
 79c:	00 c0       	rjmp	.+0      	; 0x79e <main+0x140>
 79e:	00 00       	nop
 7a0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 7a4:	0e 94 18 02 	call	0x430	; 0x430 <adc_read>
 7a8:	90 93 a7 01 	sts	0x01A7, r25	; 0x8001a7 <Red_val+0x1>
 7ac:	80 93 a6 01 	sts	0x01A6, r24	; 0x8001a6 <Red_val>
 7b0:	88 b1       	in	r24, 0x08	; 8
 7b2:	18 27       	eor	r17, r24
 7b4:	18 b9       	out	0x08, r17	; 8
					PORTC ^= (1 << Green); _delay_ms(500); Green_val = adc_read(pin); PORTC ^= (1 << Green); //light up green bulb
 7b6:	88 b1       	in	r24, 0x08	; 8
 7b8:	12 e0       	ldi	r17, 0x02	; 2
 7ba:	81 27       	eor	r24, r17
 7bc:	88 b9       	out	0x08, r24	; 8
 7be:	2f ef       	ldi	r18, 0xFF	; 255
 7c0:	89 e6       	ldi	r24, 0x69	; 105
 7c2:	98 e1       	ldi	r25, 0x18	; 24
 7c4:	21 50       	subi	r18, 0x01	; 1
 7c6:	80 40       	sbci	r24, 0x00	; 0
 7c8:	90 40       	sbci	r25, 0x00	; 0
 7ca:	e1 f7       	brne	.-8      	; 0x7c4 <main+0x166>
 7cc:	00 c0       	rjmp	.+0      	; 0x7ce <main+0x170>
 7ce:	00 00       	nop
 7d0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 7d4:	0e 94 18 02 	call	0x430	; 0x430 <adc_read>
 7d8:	90 93 a2 01 	sts	0x01A2, r25	; 0x8001a2 <Green_val+0x1>
 7dc:	80 93 a1 01 	sts	0x01A1, r24	; 0x8001a1 <Green_val>
 7e0:	88 b1       	in	r24, 0x08	; 8
 7e2:	18 27       	eor	r17, r24
 7e4:	18 b9       	out	0x08, r17	; 8
					PORTC ^= (1 << Blue); _delay_ms(500); Blue_val = adc_read(pin); PORTC ^= (1 << Blue);   //light up blue bulb
 7e6:	88 b1       	in	r24, 0x08	; 8
 7e8:	14 e0       	ldi	r17, 0x04	; 4
 7ea:	81 27       	eor	r24, r17
 7ec:	88 b9       	out	0x08, r24	; 8
 7ee:	2f ef       	ldi	r18, 0xFF	; 255
 7f0:	89 e6       	ldi	r24, 0x69	; 105
 7f2:	98 e1       	ldi	r25, 0x18	; 24
 7f4:	21 50       	subi	r18, 0x01	; 1
 7f6:	80 40       	sbci	r24, 0x00	; 0
 7f8:	90 40       	sbci	r25, 0x00	; 0
 7fa:	e1 f7       	brne	.-8      	; 0x7f4 <main+0x196>
 7fc:	00 c0       	rjmp	.+0      	; 0x7fe <main+0x1a0>
 7fe:	00 00       	nop
 800:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 804:	0e 94 18 02 	call	0x430	; 0x430 <adc_read>
 808:	90 93 a4 01 	sts	0x01A4, r25	; 0x8001a4 <Blue_val+0x1>
 80c:	80 93 a3 01 	sts	0x01A3, r24	; 0x8001a3 <Blue_val>
 810:	88 b1       	in	r24, 0x08	; 8
 812:	18 27       	eor	r17, r24
 814:	18 b9       	out	0x08, r17	; 8
					// convert uint16 to string
					char str_red [sizeof(Red_val) * 8 + 1];
					char str_green [sizeof(Green_val) * 8 + 1];
					char str_Blue [sizeof(Blue_val) * 8 + 1];

					lcd_cmd(0x80);
 816:	80 e8       	ldi	r24, 0x80	; 128
 818:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
					utoa(Red_val, str_red, 10);
 81c:	4a e0       	ldi	r20, 0x0A	; 10
 81e:	50 e0       	ldi	r21, 0x00	; 0
 820:	be 01       	movw	r22, r28
 822:	6d 5d       	subi	r22, 0xDD	; 221
 824:	7f 4f       	sbci	r23, 0xFF	; 255
 826:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <Red_val>
 82a:	90 91 a7 01 	lds	r25, 0x01A7	; 0x8001a7 <Red_val+0x1>
 82e:	0e 94 d5 04 	call	0x9aa	; 0x9aa <utoa>
					lcd_msg("R:"); lcd_cmd(0x83); lcd_msg(str_red);
 832:	89 e5       	ldi	r24, 0x59	; 89
 834:	91 e0       	ldi	r25, 0x01	; 1
 836:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
 83a:	83 e8       	ldi	r24, 0x83	; 131
 83c:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
 840:	ce 01       	movw	r24, r28
 842:	83 96       	adiw	r24, 0x23	; 35
 844:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
					utoa(Green_val, str_green, 10);
 848:	4a e0       	ldi	r20, 0x0A	; 10
 84a:	50 e0       	ldi	r21, 0x00	; 0
 84c:	be 01       	movw	r22, r28
 84e:	6e 5e       	subi	r22, 0xEE	; 238
 850:	7f 4f       	sbci	r23, 0xFF	; 255
 852:	80 91 a1 01 	lds	r24, 0x01A1	; 0x8001a1 <Green_val>
 856:	90 91 a2 01 	lds	r25, 0x01A2	; 0x8001a2 <Green_val+0x1>
 85a:	0e 94 d5 04 	call	0x9aa	; 0x9aa <utoa>
					lcd_cmd(0x88); lcd_msg("G:"); lcd_cmd(0x8B); lcd_msg(str_green);
 85e:	88 e8       	ldi	r24, 0x88	; 136
 860:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
 864:	8c e5       	ldi	r24, 0x5C	; 92
 866:	91 e0       	ldi	r25, 0x01	; 1
 868:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
 86c:	8b e8       	ldi	r24, 0x8B	; 139
 86e:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
 872:	ce 01       	movw	r24, r28
 874:	42 96       	adiw	r24, 0x12	; 18
 876:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
					utoa(Blue_val, str_Blue, 10);
 87a:	4a e0       	ldi	r20, 0x0A	; 10
 87c:	50 e0       	ldi	r21, 0x00	; 0
 87e:	be 01       	movw	r22, r28
 880:	6f 5f       	subi	r22, 0xFF	; 255
 882:	7f 4f       	sbci	r23, 0xFF	; 255
 884:	80 91 a3 01 	lds	r24, 0x01A3	; 0x8001a3 <Blue_val>
 888:	90 91 a4 01 	lds	r25, 0x01A4	; 0x8001a4 <Blue_val+0x1>
 88c:	0e 94 d5 04 	call	0x9aa	; 0x9aa <utoa>
					lcd_cmd(0xC6); lcd_msg("B:"); lcd_cmd(0xCA); lcd_msg(str_Blue);
 890:	86 ec       	ldi	r24, 0xC6	; 198
 892:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
 896:	8f e5       	ldi	r24, 0x5F	; 95
 898:	91 e0       	ldi	r25, 0x01	; 1
 89a:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
 89e:	8a ec       	ldi	r24, 0xCA	; 202
 8a0:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
 8a4:	ce 01       	movw	r24, r28
 8a6:	01 96       	adiw	r24, 0x01	; 1
 8a8:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
 8ac:	6c cf       	rjmp	.-296    	; 0x786 <main+0x128>
				}
			}
			if (mode == '3') { //mode 3 - light up RGB led for given R,G,B values
 8ae:	13 33       	cpi	r17, 0x33	; 51
 8b0:	09 f0       	breq	.+2      	; 0x8b4 <__DATA_REGION_LENGTH__+0xb4>
 8b2:	01 cf       	rjmp	.-510    	; 0x6b6 <main+0x58>
				lcd_init();
 8b4:	0e 94 0e 01 	call	0x21c	; 0x21c <lcd_init>
				lcd_cmd(0x80);
 8b8:	80 e8       	ldi	r24, 0x80	; 128
 8ba:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
				lcd_msg("mode 3 selected");
 8be:	82 e6       	ldi	r24, 0x62	; 98
 8c0:	91 e0       	ldi	r25, 0x01	; 1
 8c2:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
 8c6:	2f ef       	ldi	r18, 0xFF	; 255
 8c8:	83 ec       	ldi	r24, 0xC3	; 195
 8ca:	99 e0       	ldi	r25, 0x09	; 9
 8cc:	21 50       	subi	r18, 0x01	; 1
 8ce:	80 40       	sbci	r24, 0x00	; 0
 8d0:	90 40       	sbci	r25, 0x00	; 0
 8d2:	e1 f7       	brne	.-8      	; 0x8cc <__DATA_REGION_LENGTH__+0xcc>
 8d4:	00 c0       	rjmp	.+0      	; 0x8d6 <__DATA_REGION_LENGTH__+0xd6>
 8d6:	00 00       	nop
				_delay_ms(200);
				lcd_init();
 8d8:	0e 94 0e 01 	call	0x21c	; 0x21c <lcd_init>
				lcd_cmd(0x80);
 8dc:	80 e8       	ldi	r24, 0x80	; 128
 8de:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
				lcd_msg("Enter RED value");
 8e2:	82 e7       	ldi	r24, 0x72	; 114
 8e4:	91 e0       	ldi	r25, 0x01	; 1
 8e6:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
				int Red_Val= get_3_digit_2();
 8ea:	0e 94 77 02 	call	0x4ee	; 0x4ee <get_3_digit_2>
 8ee:	6c 01       	movw	r12, r24
 8f0:	2f ef       	ldi	r18, 0xFF	; 255
 8f2:	81 ee       	ldi	r24, 0xE1	; 225
 8f4:	94 e0       	ldi	r25, 0x04	; 4
 8f6:	21 50       	subi	r18, 0x01	; 1
 8f8:	80 40       	sbci	r24, 0x00	; 0
 8fa:	90 40       	sbci	r25, 0x00	; 0
 8fc:	e1 f7       	brne	.-8      	; 0x8f6 <__DATA_REGION_LENGTH__+0xf6>
 8fe:	00 c0       	rjmp	.+0      	; 0x900 <__stack+0x1>
 900:	00 00       	nop
				_delay_ms(100);
				lcd_init();
 902:	0e 94 0e 01 	call	0x21c	; 0x21c <lcd_init>
				lcd_cmd(0x80);
 906:	80 e8       	ldi	r24, 0x80	; 128
 908:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
				lcd_msg("Enter GREEN");
 90c:	82 e8       	ldi	r24, 0x82	; 130
 90e:	91 e0       	ldi	r25, 0x01	; 1
 910:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
				lcd_cmd(0xC0);
 914:	80 ec       	ldi	r24, 0xC0	; 192
 916:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
				lcd_msg("value");
 91a:	8c e7       	ldi	r24, 0x7C	; 124
 91c:	91 e0       	ldi	r25, 0x01	; 1
 91e:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
				int Green_Val=get_3_digit_2();
 922:	0e 94 77 02 	call	0x4ee	; 0x4ee <get_3_digit_2>
 926:	7c 01       	movw	r14, r24
 928:	2f ef       	ldi	r18, 0xFF	; 255
 92a:	81 ee       	ldi	r24, 0xE1	; 225
 92c:	94 e0       	ldi	r25, 0x04	; 4
 92e:	21 50       	subi	r18, 0x01	; 1
 930:	80 40       	sbci	r24, 0x00	; 0
 932:	90 40       	sbci	r25, 0x00	; 0
 934:	e1 f7       	brne	.-8      	; 0x92e <__stack+0x2f>
 936:	00 c0       	rjmp	.+0      	; 0x938 <__stack+0x39>
 938:	00 00       	nop
				_delay_ms(100);
				lcd_init();
 93a:	0e 94 0e 01 	call	0x21c	; 0x21c <lcd_init>
				lcd_cmd(0x80);
 93e:	80 e8       	ldi	r24, 0x80	; 128
 940:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
				lcd_msg("Enter BLUE value");
 944:	8e e8       	ldi	r24, 0x8E	; 142
 946:	91 e0       	ldi	r25, 0x01	; 1
 948:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
				int Blue_Val= get_3_digit_2();
 94c:	0e 94 77 02 	call	0x4ee	; 0x4ee <get_3_digit_2>
 950:	8c 01       	movw	r16, r24
				pwm(0,Red_Val);
 952:	b6 01       	movw	r22, r12
 954:	80 e0       	ldi	r24, 0x00	; 0
 956:	90 e0       	ldi	r25, 0x00	; 0
 958:	0e 94 03 03 	call	0x606	; 0x606 <pwm>
				pwm(1,Green_Val);
 95c:	b7 01       	movw	r22, r14
 95e:	81 e0       	ldi	r24, 0x01	; 1
 960:	90 e0       	ldi	r25, 0x00	; 0
 962:	0e 94 03 03 	call	0x606	; 0x606 <pwm>
				pwm(2,Blue_Val);
 966:	b8 01       	movw	r22, r16
 968:	82 e0       	ldi	r24, 0x02	; 2
 96a:	90 e0       	ldi	r25, 0x00	; 0
 96c:	0e 94 03 03 	call	0x606	; 0x606 <pwm>
 970:	2f ef       	ldi	r18, 0xFF	; 255
 972:	83 ed       	ldi	r24, 0xD3	; 211
 974:	90 e3       	ldi	r25, 0x30	; 48
 976:	21 50       	subi	r18, 0x01	; 1
 978:	80 40       	sbci	r24, 0x00	; 0
 97a:	90 40       	sbci	r25, 0x00	; 0
 97c:	e1 f7       	brne	.-8      	; 0x976 <__stack+0x77>
 97e:	00 c0       	rjmp	.+0      	; 0x980 <__stack+0x81>
 980:	00 00       	nop
				_delay_ms(1000);
				pwm(0,0);
 982:	60 e0       	ldi	r22, 0x00	; 0
 984:	70 e0       	ldi	r23, 0x00	; 0
 986:	80 e0       	ldi	r24, 0x00	; 0
 988:	90 e0       	ldi	r25, 0x00	; 0
 98a:	0e 94 03 03 	call	0x606	; 0x606 <pwm>
				pwm(1,0);
 98e:	60 e0       	ldi	r22, 0x00	; 0
 990:	70 e0       	ldi	r23, 0x00	; 0
 992:	81 e0       	ldi	r24, 0x01	; 1
 994:	90 e0       	ldi	r25, 0x00	; 0
 996:	0e 94 03 03 	call	0x606	; 0x606 <pwm>
				pwm(2,0);
 99a:	60 e0       	ldi	r22, 0x00	; 0
 99c:	70 e0       	ldi	r23, 0x00	; 0
 99e:	82 e0       	ldi	r24, 0x02	; 2
 9a0:	90 e0       	ldi	r25, 0x00	; 0
 9a2:	0e 94 03 03 	call	0x606	; 0x606 <pwm>
				//_delay_ms(1000);
				main();
 9a6:	0e 94 2f 03 	call	0x65e	; 0x65e <main>

000009aa <utoa>:
 9aa:	45 32       	cpi	r20, 0x25	; 37
 9ac:	51 05       	cpc	r21, r1
 9ae:	20 f4       	brcc	.+8      	; 0x9b8 <utoa+0xe>
 9b0:	42 30       	cpi	r20, 0x02	; 2
 9b2:	10 f0       	brcs	.+4      	; 0x9b8 <utoa+0xe>
 9b4:	0c 94 e0 04 	jmp	0x9c0	; 0x9c0 <__utoa_ncheck>
 9b8:	fb 01       	movw	r30, r22
 9ba:	10 82       	st	Z, r1
 9bc:	cb 01       	movw	r24, r22
 9be:	08 95       	ret

000009c0 <__utoa_ncheck>:
 9c0:	bb 27       	eor	r27, r27

000009c2 <__utoa_common>:
 9c2:	fb 01       	movw	r30, r22
 9c4:	55 27       	eor	r21, r21
 9c6:	aa 27       	eor	r26, r26
 9c8:	88 0f       	add	r24, r24
 9ca:	99 1f       	adc	r25, r25
 9cc:	aa 1f       	adc	r26, r26
 9ce:	a4 17       	cp	r26, r20
 9d0:	10 f0       	brcs	.+4      	; 0x9d6 <__utoa_common+0x14>
 9d2:	a4 1b       	sub	r26, r20
 9d4:	83 95       	inc	r24
 9d6:	50 51       	subi	r21, 0x10	; 16
 9d8:	b9 f7       	brne	.-18     	; 0x9c8 <__utoa_common+0x6>
 9da:	a0 5d       	subi	r26, 0xD0	; 208
 9dc:	aa 33       	cpi	r26, 0x3A	; 58
 9de:	08 f0       	brcs	.+2      	; 0x9e2 <__utoa_common+0x20>
 9e0:	a9 5d       	subi	r26, 0xD9	; 217
 9e2:	a1 93       	st	Z+, r26
 9e4:	00 97       	sbiw	r24, 0x00	; 0
 9e6:	79 f7       	brne	.-34     	; 0x9c6 <__utoa_common+0x4>
 9e8:	b1 11       	cpse	r27, r1
 9ea:	b1 93       	st	Z+, r27
 9ec:	11 92       	st	Z+, r1
 9ee:	cb 01       	movw	r24, r22
 9f0:	0c 94 fa 04 	jmp	0x9f4	; 0x9f4 <strrev>

000009f4 <strrev>:
 9f4:	dc 01       	movw	r26, r24
 9f6:	fc 01       	movw	r30, r24
 9f8:	67 2f       	mov	r22, r23
 9fa:	71 91       	ld	r23, Z+
 9fc:	77 23       	and	r23, r23
 9fe:	e1 f7       	brne	.-8      	; 0x9f8 <strrev+0x4>
 a00:	32 97       	sbiw	r30, 0x02	; 2
 a02:	04 c0       	rjmp	.+8      	; 0xa0c <strrev+0x18>
 a04:	7c 91       	ld	r23, X
 a06:	6d 93       	st	X+, r22
 a08:	70 83       	st	Z, r23
 a0a:	62 91       	ld	r22, -Z
 a0c:	ae 17       	cp	r26, r30
 a0e:	bf 07       	cpc	r27, r31
 a10:	c8 f3       	brcs	.-14     	; 0xa04 <strrev+0x10>
 a12:	08 95       	ret

00000a14 <_exit>:
 a14:	f8 94       	cli

00000a16 <__stop_program>:
 a16:	ff cf       	rjmp	.-2      	; 0xa16 <__stop_program>
